diff --git a/libopkg/opkg_download_curl.c b/libopkg/opkg_download_curl.c
index 17ad3a4..6301dfc 100644
--- a/libopkg/opkg_download_curl.c
+++ b/libopkg/opkg_download_curl.c
@@ -345,6 +345,7 @@ int opkg_download_backend(const char *src, const char *dest,
     res = 0;
     curl_easy_setopt(curl, CURLOPT_WRITEDATA, file);
     res = curl_easy_perform(curl);
+    curl_easy_setopt(curl, CURLOPT_RESUME_FROM, 0);
     fclose(file);
     if (res) {
         long error_code;
diff --git a/libopkg/pkg.c b/libopkg/pkg.c
index cfd812f..e00acac 100644
--- a/libopkg/pkg.c
+++ b/libopkg/pkg.c
@@ -1555,6 +1555,16 @@ int pkg_verify(pkg_t * pkg)
 
     /* Check size to mitigate hash collisions. */
     if (pkg_stat.st_size < 1 || pkg_stat.st_size != pkg->size) {
+#if defined(HAVE_SHA256) && defined(HAVE_CURL)
+        /*
+         * It should be safe to assume that there won't be collisions when
+         * sha256 is used. So in case the size of the cached artifact is
+         * smaller than its expected size, assume the download was interrupted
+         * and allow the curl backend to resume downloading.
+         */
+        if (pkg_stat.st_size < pkg->size)
+            return 1;
+#endif
         err = -1;
         opkg_msg(ERROR, "File size mismatch: %s is %lld bytes, expecting %lu bytes\n",
             pkg->local_filename, (long long int)pkg_stat.st_size, pkg->size);
